name: build-codeblocks

# Controls when the workflow will run
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32

      - name: build wxWidgets
        shell: msys2 {0}
        id: buildwx
        run: ./buildwx.sh

      - name: build CodeBlocks
        shell: cmd
        id: buildcb
        run: |
          set PATH=%PATH%;${{ steps.buildwx.outputs.MINGW32 }}
          cd /d ${{ steps.buildwx.outputs.HOME }}\codeblocks_sfmirror\src
          mingw32-make -f makefile-core WX32_INCLUDE=${{ steps.buildwx.outputs.HOME }}\wxWidgets-3.2.5\include WX32_LIB=${{ steps.buildwx.outputs.HOME }}\wxWidgets-3.2.5\lib all -j4
          .\update32.bat

      - name: prepare-release
        id: prepare-release
        shell: msys2 {0}
        run: |
          cd /home
          ./release.sh
        
      - name: release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prepare-release.outputs.RELEASE_NAME }}
          release_name: ${{ steps.prepare-buildwx.outputs.RELEASE_NAME }}
          body: |
            wxWidgets v${{ steps.prepare-release.outputs.WXMSW_VERSION }}
            CodeBlocks r${{ steps.prepare-release.outputs.CBREV_NO }}

      - name: upload
        id: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ steps.prepare-release.outputs.OUTPUT_BINARY }}
          asset_name: ${{ steps.prepare-release.outputs.OUTPUT_NAME }}
          asset_content_type: application/x-7z-compressed
